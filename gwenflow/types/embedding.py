
from pydantic import BaseModel
from typing import Optional, Union, List, Any, Dict
from typing_extensions import Literal


class Usage(BaseModel):
    prompt_tokens: int
    """The number of tokens used by the prompt."""

    total_tokens: int
    """The total number of tokens used by the request."""

class Embedding(BaseModel):
    embedding: List[float]
    index: int
    object: Literal["embedding"]

class EmbeddingResponse(BaseModel):
    data: List[Embedding]
    """The list of embeddings generated by the model."""

    model: str
    """The name of the model used to generate the embedding."""

    object: Literal["list"]
    """The object type, which is always "list"."""

    usage: Usage
    """The usage information for the request."""